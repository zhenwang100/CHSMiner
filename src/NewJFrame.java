import java.io.*;
import java.util.*;
import org.w3c.dom.svg.*;
import javax.swing.*;
import javax.swing.table.*;
import org.biosino.CHS.ontology.Chromosome;

/**
 * The class is rsponsible for GUI. The data communication is through a GUIMedia object.
 */
public class NewJFrame extends javax.swing.JFrame {
    
    /** Creates new form NewJFrame */
    public NewJFrame() {
        
        initComponents();
        this.jTabbedPane1.setEnabledAt(1, false);
        this.jTabbedPane1.setEnabledAt(2, false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jDialog1 = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog2 = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton7 = new javax.swing.JButton();
        jDialog3 = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jFileChooser2 = new javax.swing.JFileChooser();
        jDialog4 = new javax.swing.JDialog();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton8 = new javax.swing.JButton();
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jLabel13 = new javax.swing.JLabel();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jDialog5 = new javax.swing.JDialog();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        jDialog6 = new javax.swing.JDialog();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jButton21 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jButton9 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jToolBar3 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jSVGCanvas1 = new org.apache.batik.swing.JSVGCanvas();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jDialog1.setTitle("Preprocess");
        jDialog1.setModal(true);
        jDialog1.setResizable(false);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Data filter"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Species", "Chromosome", "Filtered"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Option"));

        jLabel2.setText("Merge tandem duplicates");

        jLabel3.setText("Set null family ID");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Yes");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("No");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jRadioButton1)
                        .add(41, 41, 41)
                        .add(jRadioButton2))
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(73, 73, 73))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jRadioButton1)
                    .add(jRadioButton2)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jDialog1Layout = new org.jdesktop.layout.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(218, Short.MAX_VALUE)
                .add(jButton3)
                .add(203, 203, 203))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog1Layout.createSequentialGroup()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton3)
                .addContainerGap())
        );

        jDialog2.setTitle("Search for CHS");
        jDialog2.setModal(true);
        jDialog2.setResizable(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Criterion"));

        jLabel4.setText("Size  >=");

        jLabel5.setText("Gap   <=");

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("2");

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("30");

        jLabel6.setText("genes");

        jLabel7.setText("genes");

        jLabel14.setText("The averge length of a gene is xxxxxx bp.");
        this.jLabel14.setVisible(false);

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setSelected(true);
        jRadioButton3.setText("Syntenies (between species)");
        jRadioButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("Paralogons (within species)");
        jRadioButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(52, 52, 52)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jLabel5))
                        .add(20, 20, 20)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextField3)
                            .add(jTextField2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                        .add(16, 16, 16)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel6)
                            .add(jLabel7)))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(51, 51, 51)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jRadioButton4)
                            .add(jRadioButton3)))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(22, 22, 22)
                        .add(jLabel14)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .add(15, 15, 15)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .add(19, 19, 19)
                .add(jLabel14)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 19, Short.MAX_VALUE)
                .add(jRadioButton3)
                .add(14, 14, 14)
                .add(jRadioButton4)
                .add(19, 19, 19))
        );

        jButton7.setText("OK");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jDialog2Layout = new org.jdesktop.layout.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jDialog2Layout.createSequentialGroup()
                .add(132, 132, 132)
                .add(jButton7)
                .add(135, 135, 135))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialog2Layout.createSequentialGroup()
                .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDialog3.setTitle("Compare chromosomes");
        jDialog3.setModal(true);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Selection"));

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Species", "Chromosome", "Selected"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jLabel9.setText("Compare chromosomes between");

        jLabel10.setText("and");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .add(jLabel9)
                .add(17, 17, 17)
                .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 181, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(17, 17, 17)
                .add(jLabel10)
                .add(24, 24, 24))
            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(jLabel9)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Criterion"));

        jLabel11.setText("Size     >=");

        jLabel12.setText("P-value  <=");

        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("2");

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("1");

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel11)
                    .add(jLabel12))
                .add(15, 15, 15)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextField5)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel11))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12))
                .addContainerGap())
        );

        jButton11.setText("OK");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jDialog3Layout = new org.jdesktop.layout.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialog3Layout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .add(jButton11)
                .add(198, 198, 198))
            .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog3Layout.createSequentialGroup()
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton11)
                .addContainerGap())
        );

        jPanel7.getAccessibleContext().setAccessibleName(null);

        jFileChooser2.setAcceptAllFileFilterUsed(false);
        jFileChooser2.addChoosableFileFilter(new ImageFilter("svg"));
        jFileChooser2.addChoosableFileFilter(new ImageFilter("ps"));

        jDialog4.setTitle("Progress");
        jDialog4.setModal(true);
        jDialog4.setResizable(false);
        jDialog4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jDialog4ComponentHidden(evt);
            }
        });

        jProgressBar1.setStringPainted(true);

        jButton8.setText("Finish");
        jButton8.setEnabled(false);

        jLabel13.setText("The task has been completed");

        org.jdesktop.layout.GroupLayout jDialog4Layout = new org.jdesktop.layout.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog4Layout.createSequentialGroup()
                .add(jDialog4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jDialog4Layout.createSequentialGroup()
                        .add(96, 96, 96)
                        .add(jButton8))
                    .add(jDialog4Layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(jDialog4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel13)
                            .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 197, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog4Layout.createSequentialGroup()
                .add(41, 41, 41)
                .add(jLabel13)
                .add(27, 27, 27)
                .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31)
                .add(jButton8)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jDialog5.setTitle("Show local CHS");
        jDialog5.setModal(true);
        jDialog5.setResizable(false);

        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jTextField9.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel8.setText("Select the range of gene ranks");

        jLabel15.setText("Chromosome A: from");

        jLabel16.setText("Chromosome B: from");

        jLabel17.setText("to");

        jLabel18.setText("to");

        jButton19.setText("OK");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jDialog5Layout = new org.jdesktop.layout.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog5Layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel8)
                    .add(jDialog5Layout.createSequentialGroup()
                        .add(jLabel15)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextField6))
                    .add(jDialog5Layout.createSequentialGroup()
                        .add(jLabel16)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton19)
                            .add(jTextField8))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel18)
                    .add(jLabel17))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextField9)
                    .add(jTextField7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                .add(33, 33, 33))
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog5Layout.createSequentialGroup()
                .add(40, 40, 40)
                .add(jLabel8)
                .add(24, 24, 24)
                .add(jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel17)
                    .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(36, 36, 36)
                .add(jDialog5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel18)
                    .add(jTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 30, Short.MAX_VALUE)
                .add(jButton19)
                .add(18, 18, 18))
        );

        jDialog6.setTitle("Fetch Ensembl genes");
        jDialog6.setModal(true);
        jDialog6.setResizable(false);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton21.setText("OK");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jLabel19.setText("Choose species from Ensembl release 64");

        org.jdesktop.layout.GroupLayout jDialog6Layout = new org.jdesktop.layout.GroupLayout(jDialog6.getContentPane());
        jDialog6.getContentPane().setLayout(jDialog6Layout);
        jDialog6Layout.setHorizontalGroup(
            jDialog6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialog6Layout.createSequentialGroup()
                .add(74, 74, 74)
                .add(jDialog6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jComboBox3, 0, 155, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jComboBox2, 0, 155, Short.MAX_VALUE))
                .add(80, 80, 80))
            .add(jDialog6Layout.createSequentialGroup()
                .add(124, 124, 124)
                .add(jButton21)
                .addContainerGap(140, Short.MAX_VALUE))
            .add(jDialog6Layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(jLabel19, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(43, 43, 43))
        );
        jDialog6Layout.setVerticalGroup(
            jDialog6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog6Layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(jLabel19)
                .add(28, 28, 28)
                .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(37, 37, 37)
                .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27)
                .add(jButton21)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CHSMiner 1.1");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/File.PNG"))); // NOI18N
        jButton1.setToolTipText("Open file...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Web.PNG"))); // NOI18N
        jButton20.setToolTipText("Fetching data from Ensembl...");
        jButton20.setFocusable(false);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton20.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton20);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Stop.PNG"))); // NOI18N
        jButton6.setToolTipText("Close data");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Properties.PNG"))); // NOI18N
        jButton2.setToolTipText("Preprocess...");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Run.png"))); // NOI18N
        jButton5.setToolTipText("Start search");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.NORTH);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GeneID", "familyID", "Symbol", "Species", "Chromosome", "Orient", "Start", "End", "Rank"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Gene data", jPanel1);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jToolBar2.setRollover(true);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Save.PNG"))); // NOI18N
        jButton9.setToolTipText("Save result...");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton9);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/View.png"))); // NOI18N
        jButton12.setToolTipText("Show selected CHS");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton12);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Link.png"))); // NOI18N
        jButton10.setToolTipText("Comapre chromosomes...");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton10);

        jPanel3.add(jToolBar2, java.awt.BorderLayout.NORTH);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Species A", "Chromosome A", "Start A", "End A", "Species B", "Chromosome B", "Start B", "End B", "Size", "P-value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel3.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("CHS result", jPanel3);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jToolBar3.setRollover(true);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Save.PNG"))); // NOI18N
        jButton4.setToolTipText("Save image...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton4);

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/ViewLocal.PNG"))); // NOI18N
        jButton18.setToolTipText("Show local CHS");
        jButton18.setFocusable(false);
        jButton18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton18.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton18);

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Back.png"))); // NOI18N
        jButton14.setToolTipText("Backward");
        jButton14.setFocusable(false);
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton14);

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Forward.png"))); // NOI18N
        jButton16.setToolTipText("Forward");
        jButton16.setFocusable(false);
        jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton16);

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Delete.png"))); // NOI18N
        jButton17.setToolTipText("Delete");
        jButton17.setFocusable(false);
        jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton17.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton17);

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Zoom_in.png"))); // NOI18N
        jButton15.setToolTipText("Zoom in");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton15);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Zoom_out.png"))); // NOI18N
        jButton13.setToolTipText("Zoom out");
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton13);

        jPanel6.add(jToolBar3, java.awt.BorderLayout.NORTH);

        jSVGCanvas1.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        jSVGCanvas1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jSVGCanvas1ComponentResized(evt);
            }
        });
        jSVGCanvas1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSVGCanvas1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jSVGCanvas1MouseMoved(evt);
            }
        });
        jSVGCanvas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSVGCanvas1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSVGCanvas1MouseReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jSVGCanvas1Layout = new org.jdesktop.layout.GroupLayout(jSVGCanvas1);
        jSVGCanvas1.setLayout(jSVGCanvas1Layout);
        jSVGCanvas1Layout.setHorizontalGroup(
            jSVGCanvas1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 481, Short.MAX_VALUE)
        );
        jSVGCanvas1Layout.setVerticalGroup(
            jSVGCanvas1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 262, Short.MAX_VALUE)
        );

        jPanel6.add(jSVGCanvas1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("CHS visualization", jPanel6);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Waiting for file input");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-502)/2, (screenSize.height-412)/2, 502, 412);
    }// </editor-fold>//GEN-END:initComponents

    /** "Open data" in "Gene data" pane */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.jFileChooser1.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String fileName = this.jFileChooser1.getSelectedFile().getPath();
            try {
                this.currentDir = this.jFileChooser1.getCurrentDirectory();
                this.iMedia.readGeneFile(fileName); //input format exception thrown
                
                //load gene data into the table
                DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel();
                model.setRowCount(0); //clear records before
                List<Object[]> geneTable = this.iMedia.getGeneTable();
                for (Object[] row : geneTable) {
                    model.addRow(row);
                }
                
                this.jLabel1.setText(model.getRowCount() + " gene records");
                
                //control other components
                this.jButton1.setEnabled(false);
                this.jButton20.setEnabled(false);
                this.jButton6.setEnabled(true);
                this.jButton2.setEnabled(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), 
                        "Gene file format exception", JOptionPane.ERROR_MESSAGE);
            }
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    /** "Fetching Ensembl gene" in "Gene data" pane */
    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        Set<String> taxons = this.iMedia.getEnsemblTaxons();
        this.jComboBox2.removeAllItems();
        this.jComboBox3.removeAllItems();
        for (String taxon : taxons) {
            this.jComboBox2.addItem(taxon);
            this.jComboBox3.addItem(taxon);
        }
        this.jDialog6.pack();
        this.jDialog6.setLocation(this.getX() + (this.getWidth() - jDialog6.getWidth()) / 2 , 
                  this.getY() + (this.getHeight() - jDialog6.getHeight()) / 2);   // set the dialog to the middle point
        this.jDialog6.setVisible(true);
    }//GEN-LAST:event_jButton20ActionPerformed
    
    /** "OK" in "Fetching Ensembl gene" dialog */
    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        this.jDialog6.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        try {
            String[] taxons = {this.jComboBox2.getSelectedItem().toString(),
                this.jComboBox3.getSelectedItem().toString()};
            this.iMedia.getEnsemblGene(taxons);
            DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel();
            model.setRowCount(0); //clear records before     
            List<Object[]> geneTable = this.iMedia.getGeneTable();
            for (Object[] row : geneTable) {
                    model.addRow(row);
            }
            this.jLabel1.setText(model.getRowCount() + " gene records");
            this.jDialog6.setVisible(false);    
            
            //control other components
            this.jButton1.setEnabled(false);
            this.jButton20.setEnabled(false);
            this.jButton6.setEnabled(true);
            this.jButton2.setEnabled(true);
         } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), 
                        "Ensembl connection exception", JOptionPane.ERROR_MESSAGE);
         }
         this.jDialog6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton21ActionPerformed

    /** "Close data" in "Gene data" pane */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // reset relevant components
        this.jTabbedPane1.setEnabledAt(1, false);
        this.jTabbedPane1.setEnabledAt(2, false);
        this.jButton2.setEnabled(false);
        this.jButton5.setEnabled(false);
        this.jButton6.setEnabled(false);
        this.jButton1.setEnabled(true);
        this.jButton20.setEnabled(true);
        ((DefaultTableModel)this.jTable1.getModel()).setRowCount(0); 
        this.jLabel1.setText("Waiting for file input");
        
        this.iMedia = new GUIMedia();
    }//GEN-LAST:event_jButton6ActionPerformed

    /** "Preprocess" in "Gene data" pane */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //load chromosome information
        DefaultTableModel model = (DefaultTableModel)this.jTable2.getModel();
        model.setRowCount(0);
        for (Chromosome chr : this.iMedia.chrList) {
            model.addRow(new Object[]{chr.tax, chr.chr, new Boolean(false)});
        }
        
        //show "Preprocess" dialog
        this.jDialog1.pack();
        this.jDialog1.setLocation(this.getX() + (this.getWidth() - jDialog1.getWidth()) / 2 , 
                this.getY() + (this.getHeight() - jDialog1.getHeight()) / 2);   // set the dialog to the middle point
        this.jDialog1.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /** "OK" in "Preprocess" dialog */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // get the input from the dialog window
        String nullFamID = "0";
        nullFamID = this.jTextField1.getText();
        boolean mergeTandem = this.jRadioButton1.isSelected()? true : false;
        
        //get filtered chromosomes
        DefaultTableModel model = (DefaultTableModel)this.jTable2.getModel();
        List<Integer> indexList = new ArrayList<Integer>();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (Boolean.valueOf((Boolean)model.getValueAt(i, 2))) {
                indexList.add(i);
            }
        }
        
        this.iMedia.preProcess(indexList, mergeTandem, nullFamID);
        
        this.jDialog1.setVisible(false);
        this.jButton5.setEnabled(true);
        
        // reload the gene table
        model = (DefaultTableModel)this.jTable1.getModel();
        model.setRowCount(0);
        
        /* add "rank" column
        if (model.getColumnCount() == 8) {
            model.addColumn("Rank");
        }
         */

        List<Object[]> geneTable = this.iMedia.getGeneTable();
        for (Object[] row : geneTable) {
            model.addRow(row);
        }
        
        this.jLabel1.setText(model.getRowCount() + " gene records retained");
        this.jLabel14.setText("The average length of a gene is "
                + this.iMedia.iPrePro.geneMeanLen + " bp.");
    }//GEN-LAST:event_jButton3ActionPerformed

    /** "Search for CHS" in "Gene data" pane */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.jDialog2.pack();
        this.jDialog2.setLocation(this.getX() + (this.getWidth() - jDialog2.getWidth()) / 2 , 
                this.getY() + (this.getHeight() - jDialog2.getHeight()) / 2);   // set the dialog to the middle point
        this.jDialog2.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    /** "OK" in "Search for CHS" dialog */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // get the input
        int size = 0;
        int gapNum = 0;
        this.iMedia.intraOrg = this.jRadioButton4.isSelected();
        try {
            size = Integer.parseInt(this.jTextField2.getText());
            gapNum = Integer.parseInt(this.jTextField3.getText());
            if (size <= 0 || gapNum <= 0) {
                throw new Exception();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.jDialog2, "Size and Gap should be positive integers.",
                    "Input data type exception", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.jDialog2.setVisible(false);
        
        //get and load CHS result
        this.iMedia.findCHS(size, gapNum, this.jProgressBar1, this.jButton8);
        
        // show progressbar dialog
        this.jDialog4.pack();
        this.jDialog4.setLocation(this.getX() + (this.getWidth() - jDialog4.getWidth()) / 2 , 
                this.getY() + (this.getHeight() - jDialog4.getHeight()) / 2); 
        this.jDialog4.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    /** "Finish" in Progressbar dialog */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.jDialog4.setVisible(false);
        this.iMedia.postProcess(Integer.parseInt(this.jTextField3.getText()));
        
        // load CHS data
        List<Object[]> CHSTable = this.iMedia.getCHSTable();
        DefaultTableModel model = (DefaultTableModel)this.jTable3.getModel();
        model.setRowCount(0);
        for (Object[] row : CHSTable) {
            model.addRow(row);
        }
        
        // control other components
        this.jLabel1.setText(model.getRowCount() + " CHS results were found.");
        if (model.getRowCount() != 0) {
            this.jTabbedPane1.setEnabledAt(1, true);
            this.jTabbedPane1.setEnabledAt(2, true);
            this.jTabbedPane1.setSelectedIndex(1);
        } else {
            JOptionPane.showMessageDialog(this, "No CHS was found in the data set.");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    /** "Close" in Progressbar dialog */
    private void jDialog4ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jDialog4ComponentHidden
        // indicating the CHS search thread should be stopped
        this.iMedia.CHSRunning = false;
    }//GEN-LAST:event_jDialog4ComponentHidden

    /** "Save result" in "CHS result" dialog */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        File file = new File(this.currentDir.getPath(), "CHSResult.txt");
        this.jFileChooser1.setSelectedFile(file);
        if (this.jFileChooser1.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            file = this.jFileChooser1.getSelectedFile();
            //if the file existed
            if (file.exists() && JOptionPane.OK_OPTION != JOptionPane.showConfirmDialog(this.jFileChooser1,
                    "The file " + file.getPath() + " has existed.\n" 
                    + "Do you want to rewrite it?")) {
                return;
            }
            //write file
            try {
                this.iMedia.writeCHSFile(file.getPath());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), 
                        "File writing exception", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /** "Show selected CHS" in "CHS result" dialog */
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        
        int index = this.jTable3.getSelectedRow();
        if (index != -1) {
            this.jSVGCanvas1.setSVGDocument(this.iMedia.getCHSRendering(index));
            this.jTabbedPane1.setSelectedIndex(2);
        } else {
            JOptionPane.showMessageDialog(this, "Plese select a CHS first.");
        }
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton12ActionPerformed

    /** "Compare chromosome" in "CHS result" dialog */
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        //load center chromosome information
        this.jComboBox1.removeAllItems();   
        for (Chromosome chr : this.iMedia.chrList) {
            this.jComboBox1.addItem(chr);   // jComboBox1ItemStateChanged event
        }
             
        // show "Compare chromosome" dialog
        this.jDialog3.pack();
        this.jDialog3.setLocation(this.getX() + (this.getWidth() - jDialog3.getWidth()) / 2 , 
                this.getY() + (this.getHeight() - jDialog3.getHeight()) / 2); 
        this.jDialog3.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    /** Center chromosome selected in "Compare chromosome" dialog */
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if (this.jComboBox1.getSelectedItem() == null) {
            return;
        }
        String currentTax = ((Chromosome)(this.jComboBox1.getSelectedItem())).tax;  // taxonomy name of center chromosome 
        DefaultTableModel model = (DefaultTableModel)this.jTable4.getModel();   // load surrounding chromosomes
        model.setRowCount(0);
        this.tempIndexList = new ArrayList<Integer>();  // the indexes of loaded surrounding chromosomes
        int i = 0;
        for (Chromosome chr : this.iMedia.chrList) {
            if ((this.iMedia.intraOrg && chr.tax.equals(currentTax)) ||
                    (!this.iMedia.intraOrg && !chr.tax.equals(currentTax))) {
                model.addRow(new Object[] {chr.tax, chr.chr, new Boolean(true)});
                this.tempIndexList.add(i);
            }
            i++;
        }  
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    /** "OK" in "Compare chromosome" dialog */
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        
        // get the input
        int size = Integer.parseInt(this.jTextField2.getText());
        double pValue = 0;
        try {
            size = Integer.parseInt(this.jTextField4.getText());
            pValue = Double.parseDouble(this.jTextField5.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.jDialog2, "Size should be an integer and P-value be a numerical value.",
                    "Input data type exception", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int index = this.jComboBox1.getSelectedIndex(); //get the index of center chromosome
        DefaultTableModel model = (DefaultTableModel)this.jTable4.getModel(); //get the index list of selected surrounding chromosomes
        for (int i = 0, j = 0; i < model.getRowCount(); i++) {
            if (!Boolean.valueOf((Boolean)model.getValueAt(i, 2))) {
                this.tempIndexList.remove(i - j);   // When an element is removed, the original index will be changed, so j is used to correct. 
                j++;
            }
        }
        
        // generate and load the chromosome comparison image
        SVGDocument svgDoc = this.iMedia.getChrCHSRendering(index, this.tempIndexList, size, pValue);
        if (svgDoc == null) {
            JOptionPane.showMessageDialog(this, "No CHS found for the chromosome");
            return;
        } else {
            this.jSVGCanvas1.setSVGDocument(svgDoc);
            this.jDialog3.setVisible(false);
            this.jTabbedPane1.setSelectedIndex(2);
        }
        
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }                                             
    
    /** "Save image" in "CHS visualization" pane */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        File file = new File(this.currentDir.getPath(), "CHSImage");
        this.jFileChooser2.setSelectedFile(file);
        
        if (this.jFileChooser2.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            file = this.jFileChooser2.getSelectedFile();
            String ext = this.jFileChooser2.getFileFilter().getDescription();
            if (!file.getName().endsWith("." + ext)) {
                file = new File(file.getPath() + "." + ext);
            }
            
            //if the file existed
            if (file.exists() && JOptionPane.OK_OPTION != JOptionPane.showConfirmDialog(this.jFileChooser1,
                    "The file " + file.getPath() + " has existed.\n" 
                    + "Do you want to rewrite it?")) {
                return;
            }
            //write file
            try {
                this.iMedia.writeCHSRendering(ext, file.getPath());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), 
                        "File writing exception", JOptionPane.ERROR_MESSAGE);
            }
        }    
    }//GEN-LAST:event_jButton4ActionPerformed

    /** "Zoom out" in "CHS visualization" pane */
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        org.apache.batik.swing.JSVGCanvas.ZoomAction action = jSVGCanvas1.new ZoomAction(1.1);
        action.actionPerformed(evt);
    }//GEN-LAST:event_jButton15ActionPerformed

    /** "Zoom in" in "CHS visualization" pane */
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        org.apache.batik.swing.JSVGCanvas.ZoomAction action = jSVGCanvas1.new ZoomAction(0.9);
        action.actionPerformed(evt);
    }//GEN-LAST:event_jButton13ActionPerformed
    
    /** "Backward" in "CHS visualization" pane */
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
            this.jSVGCanvas1.setSVGDocument(this.iMedia.nevigateRendering(-1));
    }//GEN-LAST:event_jButton14ActionPerformed
    
    /** "Forward" in "CHS visualization" pane */
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        this.jSVGCanvas1.setSVGDocument(this.iMedia.nevigateRendering(1));
    }//GEN-LAST:event_jButton16ActionPerformed

    /** "Delete" in "CHS visualization" pane */
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        this.jSVGCanvas1.setSVGDocument(this.iMedia.deleteRendering());
    }//GEN-LAST:event_jButton17ActionPerformed

    /** Reload the SVG doc, or the image may be incomplete due to resize */
    private void jSVGCanvas1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSVGCanvas1ComponentResized
        this.jSVGCanvas1.setSVGDocument(this.jSVGCanvas1.getSVGDocument());
    }//GEN-LAST:event_jSVGCanvas1ComponentResized
    
    /** Drag the image */
    private void jSVGCanvas1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSVGCanvas1MouseDragged
        // When mouse is dragged, the event is fired continually.
        java.awt.Point curp = evt.getPoint();
        if (this.p != null) {
            org.apache.batik.swing.JSVGCanvas.ScrollLeftAction action1 = 
                    jSVGCanvas1.new ScrollLeftAction(curp.x - this.p.x);
            org.apache.batik.swing.JSVGCanvas.ScrollUpAction action2 = 
                    jSVGCanvas1.new ScrollUpAction(curp.y - this.p.y);
            action1.actionPerformed(null);
            action2.actionPerformed(null);
        }
        this.p = curp;
    }//GEN-LAST:event_jSVGCanvas1MouseDragged

    /** Drag the image: reset the initial location */
    private void jSVGCanvas1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSVGCanvas1MouseReleased
        this.p = null;
    }//GEN-LAST:event_jSVGCanvas1MouseReleased

    /** Click the image: a new image may be created */
    private void jSVGCanvas1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSVGCanvas1MouseClicked
        this.jSVGCanvas1.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        
        try {
            // The image may have been resized, so we should invert the transform to get the original location of a point.
            java.awt.geom.Point2D p = 
                    this.jSVGCanvas1.getRenderingTransform().createInverse().transform(evt.getPoint(), null);
            
            // Reset the image
            this.jSVGCanvas1.setSVGDocument(this.iMedia.getCHSRendering(p));
        } catch (Exception e) { 
            //Exception of reverse a matrix
        }
        
        this.jSVGCanvas1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jSVGCanvas1MouseClicked
    
    /** Change the cursor where there is a link in "CHS Visualization" pane*/
    private void jSVGCanvas1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSVGCanvas1MouseMoved
        try {
            // The image may have been resized, so we should invert the transform to get the original location of a point.
            java.awt.geom.Point2D p = 
                    this.jSVGCanvas1.getRenderingTransform().createInverse().transform(evt.getPoint(), null);
            if (this.iMedia.pointCHS(p)) {
                this.jSVGCanvas1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            } else {
                this.jSVGCanvas1.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
            }
        } catch (Exception e) { 
            //Exception of reverse a matrix
        }
    }//GEN-LAST:event_jSVGCanvas1MouseMoved

    /** "Show local CHS" in "CHS visualization pane" */
    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        if (this.iMedia.localCHSEnabled()) {    // The dialog is visible only when an individual CHS is shown. 
            this.jDialog5.pack();
            this.jDialog5.setLocation(this.getX() + (this.getWidth() - jDialog2.getWidth()) / 2 , 
                    this.getY() + (this.getHeight() - jDialog2.getHeight()) / 2);   // set the dialog to the middle point
            this.jDialog5.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select an individual CHS first.",
                    "Exception", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton18ActionPerformed
    
    /** "OK" in "Show local CHS dialog" */
    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        try {
            int startA = Integer.parseInt(this.jTextField6.getText());  // the range of gene ranks
            int endA = Integer.parseInt(this.jTextField7.getText());
            int startB = Integer.parseInt(this.jTextField8.getText());
            int endB = Integer.parseInt(this.jTextField9.getText());
         
            SVGDocument doc = this.iMedia.getLocalCHS(startA, endA, startB, endB);
            if (doc == null) {
                throw new Exception();
            }
            this.jSVGCanvas1.setSVGDocument(doc);
            this.jDialog5.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.jDialog5, 
                    "Gene ranks should be integers and in the range of the selected CHS.",
                    "Input warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jButton19ActionPerformed



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    private GUIMedia iMedia = new GUIMedia();    // object for data comunication
    private File currentDir = new File(System.getProperty("user.dir"));    // current directory
    private List<Integer> tempIndexList; // a temporary index list
    private java.awt.Point p;   // a point record when mouse is dragged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JDialog jDialog6;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private org.apache.batik.swing.JSVGCanvas jSVGCanvas1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    // End of variables declaration//GEN-END:variables
    
}
